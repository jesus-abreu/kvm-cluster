# ------------------------------------------------------------------
# Setting up NGINX as reverse proxy and Load Balance
# NGINX will be setup in the KVM host as an external LB, outside of the VMs subnet.
# We need to setup our load balance to be able to install OpenShift into the new created cluster 
# to act as a load balancer for the OpenShift API server.
#
# Jesus Natividad Rodriguez A, MIT license
# May 2025
# play name: setup-nginx-load-balance.yml
# ansible-playbook build-cluster.yml -e infra=lb-setup
# ------------------------------------------------------------------
---
- name: Check if Nginx apps certificate exists
  ansible.builtin.stat:
    path: "{{ ca_cert_path }}"
  register: cert_stat
  become: true

- name: Remove existing Nginx apps certificate and key
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - "{{ ca_cert_path }}"
    - "{{ ca_cert_key }}"
  when: cert_stat.stat.exists
  become: true

- name: Generate self-signed wildcard certificate for Nginx apps
  ansible.builtin.command: >
    openssl req -x509 -nodes -days 365
    -newkey rsa:2048
    -keyout {{ ca_cert_key }}
    -out {{ ca_cert_path }}
    -subj "/CN=*.apps.{{ cluster_name }}.{{ cluster_domain }}"
    -addext "subjectAltName=DNS:*.apps.{{ cluster_name }}.{{ cluster_domain }}"
  become: true

- name: Install/upgrade NGINX as LB/reverse proxy
  apt:
    name: nginx
    state: latest       # latest guarantee to upgrade if present.
    #update_cache: yes   # Update apt cache before installation

- name: Create NGINX load balancer configuration file
  template:
    src: nginx.conf.j2  # Path to your Jinja2 config template file
    dest: "{{ nginx_config_path }}"  # Destination path for the config file

- name: Create symbolic link for NGINX site config
  ansible.builtin.file:
    src: "{{ nginx_config_path }}"
    dest: "{{ nginx_config_path }}"
    state: link
    force: yes
  become: true

- name: Test NGINX configuration
  ansible.builtin.command: nginx -t
  register: nginx_test
  # failed_when: "'successful' not in nginx_test.stdout"
  # changed_when: false
  become: true

- name: Restart NGINX service
  ansible.builtin.service:
    name: nginx
    state: restarted
  become: true

- name: Reload NGINX service
  ansible.builtin.service:
    name: nginx
    state: reloaded
  become: true
